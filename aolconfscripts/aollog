#!/bin/bash
logtime=$(date -u +'%Y/%m/%d %H:%M:%S.%N')


#logdir=$(realpath "./logdir/$(date -u +'%Y%m%d')/logging")
logdir="./logdir/$(date -u +'%Y%m%d')/logging"
logdir1=="./logdir/aolconf.log"

echo "logdir : ${logdir}"

# number of arguments to script
NBARGS=2







function printHELP {
echo "------------------------------------------------------------------------"
echo "$(tput bold) WRITE TO COMMAND LOG FILE $(tput sgr0)"
echo "------------------------------------------------------------------------"
echo " Suitable for slow ( < 200 Hz ) loggging"
echo " log directory: $logdir"
echo ""
echo " $(tput bold)USAGE:$(tput sgr0)"
echo "     $0 -hei -d <optdir> <logname> <entry>"
echo ""
echo " $(tput bold)OPTIONS:$(tput sgr0)"
echo "     $(tput bold)-h$(tput sgr0)          help"
echo "     $(tput bold)-e$(tput sgr0)          include external log"
echo "     $(tput bold)-i$(tput sgr0)          Interactive mode, included external log"
echo "     $(tput bold)-d$(tput sgr0) <dir>    save to $(tput bold)d$(tput sgr0)irectory <dir>"
echo ""
echo " $(tput bold)INPUT:$(tput sgr0)"
echo "     <logname>     log name"
echo "     <entry>       log entry"
echo ""
echo " $(tput bold)EXAMPLE:$(tput sgr0)"
echo "     $1 comments \"this will be logged\""
echo "     $1 -d \"/media/data\" -ie "
echo ""
echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "%20s       Write to command log file\n" "$0" 
}







# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
  shift
  case "$arg" in
    "--help") set -- "$@" "-h" ;;
    "--help1") 
set -- "$@" "-h" 
singlelinehelp=1;
;;
    *)        set -- "$@" "$arg"
  esac
done



LOOPMODE=0
EXTERNAL=0
EXTRADIR=0
logdir0=""
while getopts :heid: FLAG; do
  case $FLAG in
    h)  #show help
      if [ "$singlelinehelp" -eq "0" ]; then
      printHELP
      else
      printHELP1
      fi
      exit
      ;;
    i)
    LOOPMODE="1"
    ;;
    e)
    EXTERNAL="1"
    ;;
    d)
    EXTRADIR="1"
    logdirextra="$OPTARG"
    ;;
    \?) #unrecognized option - show help
      echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
      printHELP
      ;;
  esac
done

shift $((OPTIND-1))  #This tells getopts to move on to the next argument.

### End getopts code ###








if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
if [ "$#" -ne $NBARGS ]; then
    echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
fi
printHELP
        exit
fi



mkdir -p $logdir

if [ "$EXTRADIR" = "1" ]; then
logdirextraf="${logdirextra}/$(date -u +'%Y%m%d')/logging"
mkdir -p $logdirextraf
fi



if [ "$LOOPMODE" = "0" ]; then
## SINGLE ENTRY LOG
	printf "%s %-10s %s\n" "$logtime" "$1" "$2" >> $logdir/$1.log
	ln -fs $PWD/$logdir/$1.log aolconf.log

	if [ "$EXTERNAL" = "1" ]; then
	dologext "$1 $2" &
	fi

	if [ "$EXTRADIR" = "1" ]; then
	printf "%s %-10s %s\n" "$logtime" "$1" "$2" >> ${logdirextraf}/$1.log
	fi

else
## LOOP MODE
	echo "LOGGING to FILE \"$logdir/$1.log\""
	echo "LOOPMODE = $LOOPMODE"
	echo "EXTERNAL = $EXTERNAL"


	while [ 1 ]; do
	read -p "$1 log >  " LOGTEXT
	logtime=$(date -u +'%Y/%m/%d %H:%M:%S.%N')
	printf "%s %-10s %s\n" "$logtime" "$1" "$LOGTEXT" >> $logdir/$1.log
	printf "%s %-10s %s\n" "$logtime" "$1" "$LOGTEXT"

	if [ "$EXTERNAL" = "1" ]; then
	dologext "$1 $LOGTEXT"
	fi
	
	if [ "$EXTRADIR" = "1" ]; then
	printf "%s %-10s %s\n" "$logtime" "$1" "$LOGTEXT" >> ${logdirextraf}/$1.log
	fi

done

fi
